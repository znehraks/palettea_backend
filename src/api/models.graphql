type User {
  id: ID!
  userName: String!
  gender: String!
  age: Int!
  email: String!
  password: String!
  address1: String
  address2: String
  orderList: [Product!]
  wishList: [Product!]
  isSelf: Boolean!
  isAdmin: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Product {
  id: ID!
  productCode: String!
  productName: String!
  productCategory: [ProductCategory!]!
  productCost: Int!
  productCombination: [Combination!]
  productStock: Int!
  productSaleCount: Int!
  createdAt: String!
  updatedAt: String!
}

type ProductCategory {
  id: ID!
  productCategoryCode: String!
  productCategoryName: String!
  product: [Product!]
  createdAt: String!
  updatedAt: String!
}

type Question {
  id: ID!
  questionCode: String!
  questionNumber: Int!
  questionTitle: [QuestionTitle!]!
  questionAnswer: [QuestionAnswer!]!
  createdAt: String!
  updatedAt: String!
}

type QuestionTitle {
  id: ID!
  questionTitleCode: String!
  questionTitleName: String!
  createdAt: String!
  updatedAt: String!
}

type QuestionAnswer {
  id: ID!
  questionAnswerCode: String!
  questionAnswerName: String!
  createdAt: String!
  updatedAt: String!
}

type Base {
  id: ID!
  baseName: String
  stock: Int!
  createdAt: String!
  updatedAt: String!
}

type Flavor {
  id: ID!
  flavorName: String
  stock: Int!
  createdAt: String!
  updatedAt: String!
}

type Combination {
  id: ID!
  combinationCode: String!
  base: [Base!]
  flavor: [Flavor!]
  depth: Int!
  count: Int!
  createdAt: String!
  updatedAt: String!
}

type Order {
  id: ID!
  orderUser: [User!]!
  orderProduct: [Product!]
  orderCombination: [Combination!]
  quantity: Int!
  status: String!
  createdAt: String!
  updatedAt: String!
}

type Consult {
  id: ID!
  consultCategory: String!
  consultTitle: String!
  consultContent: String!
  consultAnswer: String!
  createdAt: String!
  updatedAt: String!
}

type ConsultCategory {
  id: ID!
  consultCategoryCode: String!
  consultCategoryName: String!
  consult: [Consult!]
  createdAt: String!
  updatedAt: String!
}