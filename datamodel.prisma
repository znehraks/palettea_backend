type User {
  id: ID! @id
  userName: String!
  gender: String!
  age: Int!
  email: String! @unique
  password: String!
  address1: String
  address2: String
  orderList: [Product!] @relation(name: "OrderListOfUser")
  wishList: [Product!] @relation(name: "WishListOfUser")
  point: Int! @default(value: 0)
  isAdmin: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Product {
  id: ID! @id
  productCode: String! @unique
  productName: String! @unique
  productCategory: [ProductCategory!]! @relation(name: "ProductCategoryOfProduct")
  productCost: Int! @default(value: 0)
  productCombination: [Combination!] @relation(name: "ProductCombinationOfProduct")
  productStock: Int! @default(value: 0)
  productSaleCount: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ProductCategory {
  id: ID! @id
  productCategoryCode: String! @unique
  productCategoryName: String! @unique
  product: [Product!] @relation(name:"ProductOfProductCategory")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Question {
  id: ID! @id
  questionCode: String! @unique
  questionNumber: Int!
  questionTitle: [QuestionTitle!]! @relation(name:"QuestionTitleOfQuestion")
  questionAnswer: [QuestionAnswer!]! @relation(name:"QuestionAnswerOfQuestion")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type QuestionTitle {
  id: ID! @id
  questionTitleCode: String! @unique
  questionTitleName: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type QuestionAnswer {
  id: ID! @id
  questionAnswerCode: String! @unique
  questionAnswerName: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Base {
  id: ID! @id
  baseName: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Flavor {
  id: ID! @id
  flavorName: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Combination {
  id: ID! @id
  combinationCode: String! @unique
  base: [Base!]! @relation(name: "BaseOfCombination")
  flavor: [Flavor!]! @relation(name: "FlavorOfCombination")
  depth: Int!
  count: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Order {
  id: ID! @id
  orderUser: [User!]! @relation(name: "OrderUserOfOrder")
  orderProduct: [Product!] @relation(name: "OrderProductOfOrder")
  orderCombination: [Combination!] @relation(name: "OrderCombinationOfOrder")
  quantity: Int!
  status: String! @default(value: "unchecked")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Consult {
  id: ID! @id
  consultCategory: [ConsultCategory!]! @relation(name: "ConsultCategoryOfConsult")
  consultTitle: String!
  consultContent: String!
  consultAnswer: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ConsultCategory {
  id: ID! @id
  consultCategoryCode: String! @unique
  consultCategoryName: String! @unique
  consult: [Consult!] @relation(name: "ConsultCategoryOfConsult")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}